{%- liquid
  assign color_scheme = section.settings.color_scheme
  assign bg_color = false

  if color_scheme == '1'
    assign bg_color = settings.color_scheme_1_bg
    assign bg_gradient = settings.color_scheme_1_gradient
  elsif color_scheme == '2'
    assign bg_color = settings.color_scheme_2_bg
    assign bg_gradient = settings.color_scheme_2_gradient
  elsif color_scheme == '3'
    assign bg_color = settings.color_scheme_3_bg
    assign bg_gradient = settings.color_scheme_3_gradient
  endif

  if bg_gradient != blank
    assign bg_color = true
  elsif bg_color == blank or bg_color == 'rgba(0,0,0,0)' or bg_color == settings.bg_color
    assign bg_color = false
  endif
-%}

<section class="faq-description-section section container">
  <div class="{% if section.settings.full_width or bg_color %} {% endif %}  {% unless color_scheme == 'none' %} color-scheme color-scheme--{{ color_scheme }}{% endunless %}">
    {%- if collection.description != blank -%}
      <div class="description-block text-white bg-blue-200 px-6 container">
        {% if section.settings.heading != blank %}
          <h3 class="text-2xl font-bold mb-4 text-current pt-8">{{ section.settings.heading }}</h3>
        {% endif %}
        <div class="collection-description max-w-3xl mx-auto">
          {{ collection.description }}
        </div>
      </div>
    {%- endif -%}

    {%- assign faq_list = collection.metafields.custom.faqs.value -%}

    {% if faq_list %}
      <div class="faq-block section--padded bg-white container">
        <h3 class="text-2xl font-bold mb-6 text-current">
          {{ section.settings.faq_heading | default: 'Frequently Asked Questions' }}
        </h3>
        <div id="faq-list" class="grid space-y-4" style="gap:3px;"></div>
      </div>
    {% endif %}
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const faqData = {{ faq_list | json }};
    const faqContainer = document.getElementById('faq-list');

    if (Array.isArray(faqData) && faqData.length > 0) {
      let html = '';
      faqData.forEach((faq) => {
        html += `
          <div class="faq-item border-b pb-3 flex flex-col">
            <button class="faq-question flex justify-between items-center w-full text-start font-semibold text-lg">
              <span>${faq.question}</span>
           <span class="icon transform transition-transform inline-block" style="transform-origin: center;
  transition: transform 0.2s ease-in-out;"> 
  <svg xmlns="http://www.w3.org/2000/svg" width="27" height="14" viewBox="0 0 27 14" fill="none">
    <path d="M13.3001 14L0.0499115 0.5L26.5503 0.5L13.3001 14Z" fill="#B1B1B1"/>
  </svg>
</span>

            </button>
            <div class="faq-answer text-gray-600 ">
              ${faq.answer}
            </div>
          </div>`;
      });
      faqContainer.innerHTML = html;
faqContainer.querySelectorAll('.faq-question').forEach((btn) => {
  btn.addEventListener('click', function () {
    const answer = this.nextElementSibling;
    const icon = this.querySelector('.icon');
    const isOpen = answer.style.maxHeight;

    // Close all
    faqContainer.querySelectorAll('.faq-answer').forEach((el) => {
      el.style.maxHeight = null;
    });
    faqContainer.querySelectorAll('.icon').forEach(el => el.style.transform = 'rotate(0deg)');

    // Open current
    if (!isOpen) {
      answer.style.maxHeight = answer.scrollHeight + "px";
      icon.style.transform = 'rotate(180deg)';
    }
  });
});

    } else {
      faqContainer.innerHTML = "<p>No FAQs available.</p>";
    }
  });
</script>

{% schema %}
{
  "name": "Collection desc and FAQ",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": "Main Heading",
      "default": "Best Selling Treatments And Serums"
    },
    {
      "type": "text",
      "id": "faq_heading",
      "label": "FAQ Heading",
      "default": "Frequently Asked Questions"
    },
     {
      "type": "select",
      "id": "color_scheme",
      "label": "Color scheme",
      "options": [
        {
          "value": "none",
          "label": "None"
        },
        {
          "value": "1",
          "label": "Scheme 1"
        },
        {
          "value": "2",
          "label": "Scheme 2"
        },
        {
          "value": "3",
          "label": "Scheme 3"
        }
      ],
      "default": "none"
    }
  ],
  "presets": [
  {
    "name": "Collection desc with FAQ"
  }
]

}
{% endschema %}
